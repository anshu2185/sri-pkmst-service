input {
  file {
    path => "E:\product-v2\trunk\log\product-service.log"
    start_position => "beginning"
    
  }
}


filter {
       # pattern matching logback pattern
       grok {
              match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}\s+\[%{DATA:thread}\]\s+%{LOGLEVEL:severity}\s+%{DATA:class}-\s+%{DATA:type}-\s+\[%{DATA:method}:%{DATA:verb}\]\s+\[%{DATA:path}\]\s+\[%{DATA:reqparam}\]\s+\[%{DATA:reqbody}\]\s+\[%{DATA:remoteaddr}:%{DATA:IP}\]\s+\[%{DATA:response}\]\s+\[%{DATA:sc}:%{DATA:statuscode}\]\s+\[%{DATA:rt}:%{NUMBER:responsetime}\]" }
       }
       
       mutate {
  convert => {
    "responsetime" => "integer"
  }
}
       
      
       
}

output {
  # Print each event to stdout, useful for debugging. Should be commented out in production.
  # Enabling 'rubydebug' codec on the stdout output will make logstash
  # pretty-print the entire event as something similar to a JSON representation.
  stdout {
    codec => rubydebug
  }

  # Sending properly parsed log events to elasticsearch
  elasticsearch {
    hosts => ["localhost:9200"]
  }
}